{"version":3,"sources":["components/UserCard.js","components/Repos.js","context/UserContext.js","pages/Home.js","pages/SignIn.js","pages/SignUp.js","pages/PageNotFound.js","layout/Footer.js","layout/Header.js","firebase/FireBaseConfig.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["UserCard","user","Card","className","src","avatar_url","alt","CardBody","name","location","bio","hireable","followers","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroupItem","map","repo","key","id","language","description","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","SignIn","email","setEmail","password","setPassword","lg","Form","onSubmit","event","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","SignUp","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","App","Provider","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.13423f90.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardBody } from \"reactstrap\";\n\nconst UserCard = ({user}) => {\n    return (\n        <div>\n            <Card className=\"text-center mt-3 mb-4\">\n                <img src={user.avatar_url} className=\"img-thumbnail\" alt=\"github\" />\n                <CardBody>\n                    <div className=\"text-primary\">{user.name}</div>\n                    <div className=\"text-primary\">{user.location}</div>\n                    <div className=\"text-primary\">{user.bio}</div>\n                    <div className=\"text-info\">Available for Hire: {user.hireable ? \"YES\" : \"NO\"}</div>\n                    <div className=\"text-info\">Followers: {user.followers}</div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n};\n\nexport default UserCard;","import React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport {ListGroup, ListGroupItem} from \"reactstrap\";\n\nconst Repos = ({repos_url}) => {\n    const [repos, setRepos] = useState([]);\n\n    const fetchRepos = async() => {\n        const {data} = await Axios.get(repos_url)\n        setRepos(data)\n    }\n\n    useEffect(() => {\n        fetchRepos()\n    }, [repos_url])\n\n    return (\n        <div>\n        <ListGroupItem>\n            {repos.map(repo => (\n                <ListGroupItem key={repo.id}>\n                    <div className=\"text-primary\">{repo.name}</div>\n                    <div className=\"text-secondary\">{repo.language}</div>\n                    <div className=\"text-info\">{repo.description}</div>\n                </ListGroupItem>\n            ))}\n        </ListGroupItem>\n            \n        </div>\n    );\n};\n\nexport default Repos;","import { createContext } from \"react\";\n\nexport const UserContext = createContext();","import React, { useContext, useState } from 'react';\nimport Axios from \"axios\";\n\nimport {\n  Row,\n  Container,\n  Col,\n  Input,\n  Button,\n  InputGroup,\n  InputGroupAddon\n} from \"reactstrap\";\n\nimport UserCard from \"../components/UserCard\";\nimport Repos from \"../components/Repos\";\nimport { Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\nimport { toast } from \"react-toastify\";\n\n\n\nconst Home = () => {\n\n    const context = useContext(UserContext);\n    const [query, setQuery] = useState(\"\");\n    const [user, setUser] = useState(null);\n\n    const fetchDetails = async () => {\n        try {\n            const {data} = await Axios.get(`https://api.github.com/users/${query}`)\n            setUser(data)\n            console.log({data});\n            \n        } catch (error) {\n            toast(\"not able to locate user\", {\n                type:\"error\"\n            })\n        }\n    }\n\n    //put any page behind login\n\n    if (!context.user?.uid) {\n        return <Redirect to=\"/signin\" />\n    }\n\n    return (\n        <Container>\n          <Row className=\" mt-3\">\n            <Col md=\"5\">\n              <InputGroup>\n                <Input\n                  type=\"text\"\n                  value={query}\n                  onChange={(e) => setQuery(e.target.value)}\n                  placeholder=\"Please provide the username\"\n                />\n                <InputGroupAddon addonType=\"append\">\n                  <Button onClick={fetchDetails} color=\"primary\">Fetch User</Button>\n                </InputGroupAddon>\n              </InputGroup>\n              {\n                user ? <UserCard user={user} /> : null\n              }\n            </Col>\n            <Col md=\"7\">\n                {\n                    user ? <Repos repos_url={user.repos_url} /> : null\n                }\n            </Col>\n          </Row>\n        </Container>\n      );\n};\n\nexport default Home;","import React, { useContext, useState } from 'react';\nimport { Container, Form, Button, FormGroup, Label, Col, Input, Row, Card, CardBody, CardFooter, CardHeader} from \"reactstrap\";\n// import firebase from \"firebase/auth\";\nimport { UserContext } from '../context/UserContext';\nimport {Redirect} from \"react-router-dom\";\nimport {toast} from \"react-toastify\";\nimport firebase from 'firebase';\n\nconst SignIn = () => {\n    const context = useContext(UserContext);\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('');\n\n    const handleSignIn = () => {\n        firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(res => {\n            console.log(res);\n            context.setUser({email: res.user.email, uid: res.user.uid})\n            \n        })\n        .catch(error => {\n            console.log(error);\n            toast(error.message, {\n                type: \"error\"\n            })\n            \n        })\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        handleSignIn()\n    }\n    \n    if (context.user?.uid) {\n        return <Redirect to=\"/github-search-app\" />\n    }\n    return (\n\t\t<Container className='text-center'>\n\t\t\t<Row>\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<CardHeader className=''>SignIn here</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\n\t\t\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='provide your email'\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\n\t\t\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='your password here'\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t<CardFooter>\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary'>\n\t\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardFooter>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default SignIn;","import React, { useContext, useState } from 'react';\nimport { Container, Form, Button, FormGroup, Label, Col, Input, Row, Card, CardBody, CardFooter, CardHeader} from \"reactstrap\";\n// import firebase from \"firebase/auth\";\nimport { UserContext } from '../context/UserContext';\nimport {Redirect} from \"react-router-dom\";\nimport {toast} from \"react-toastify\";\nimport firebase from 'firebase';\n\nconst SignUp = () => {\n    const context = useContext(UserContext);\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('');\n\n    const handleSignUp = () => {\n        firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(res => {\n            console.log(res);\n            context.setUser({email: res.user.email, uid: res.user.uid})\n            \n        })\n        .catch(error => {\n            console.log(error);\n            toast(error.message, {\n                type: \"error\"\n            })\n            \n        })\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        handleSignUp()\n    }\n    \n    if (context.user?.uid) {\n        return <Redirect to=\"/github-search-app\" />\n    }\n    return (\n\t\t<Container className='text-center'>\n\t\t\t<Row>\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<CardHeader className=''>SignUp here</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\n\t\t\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='provide your email'\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\n\t\t\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='your password here'\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t<CardFooter>\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary'>\n\t\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardFooter>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default SignUp;","import React from 'react';\n\nconst PageNotFound = () => {\n    return (\n        <div>\n            <h1>Page Not found </h1>\n        </div>\n    );\n};\n\nexport default PageNotFound;","import React from 'react';\nimport {Container} from \"reactstrap\";\n\nconst Footer = () => {\n    return (\n        <Container fluid tag=\"footer\" className=\"text-center bg-info text-white text-uppercase fixed-bottom p-3\">\n            Github Search App \n        </Container>\n    );\n};\n\nexport default Footer;","import React, { useContext, useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, NavbarText} from \"reactstrap\";\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\n\n\nconst Header = () => {\n\n    const context =useContext(UserContext);\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const toggle = () => setIsOpen(!isOpen)\n\n    return (\n        <Navbar color=\"info\" light expand=\"md\">\n            <NavbarBrand><Link to=\"/\" className=\"text-white\">Github Search App</Link></NavbarBrand>\n            <NavbarText className=\"text-white\">\n                {\n                    context.user?.email ? context.user.email : \"\"\n                }\n            </NavbarText>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                {\n                    context.user \n                    ?\n                    (<NavItem>\n                        <NavLink \n                         onClick={() => {context.setUser(null)}}\n                         className=\"text-white\" >LogOut</NavLink>\n                    </NavItem>)\n                    :\n                    (\n                    <>\n                    <NavItem>\n                        <NavLink tag={Link} to='/signin' className=\"text-white\" >SignIn</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink tag={Link} to='/signup' className=\"text-white\" >SignUp</NavLink>\n                    </NavItem>\n                    </>\n                    )\n                }\n                    \n                </Nav>\n            </Collapse>\n        </Navbar>\n    );\n};\n\nexport default Header;","var FirebaseConfig = {\n    apiKey: \"AIzaSyBNKxthjbxEURIoFPVR0ZuH2ZTPAe3B3qw\",\n    authDomain: \"mygitapp-ea68e.firebaseapp.com\",\n    databaseURL: \"https://mygitapp-ea68e.firebaseio.com\",\n    projectId: \"mygitapp-ea68e\",\n    storageBucket: \"mygitapp-ea68e.appspot.com\",\n    messagingSenderId: \"1066677873693\",\n    appId: \"1:1066677873693:web:6bf464db94cd5ab7a46af4\",\n    measurementId: \"G-R6LF6ZY9WF\"\n  };\n\n  export default FirebaseConfig;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//react router\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\n\n//toast\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n//firebase\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n//components\nimport Home from './pages/Home';\nimport SignIn from './pages/SignIn';\nimport SignUp from './pages/SignUp';\nimport PageNotFound from './pages/PageNotFound';\nimport { UserContext } from './context/UserContext';\nimport Footer from './layout/Footer';\nimport Header from './layout/Header';\nimport FirebaseConfig from './firebase/FireBaseConfig';\n\n\n//init firebase\nfirebase.initializeApp(FirebaseConfig);\n\nfunction App() {\n\n  const [user, setUser] = useState(null);\n\n  return (\n   <BrowserRouter>\n     <ToastContainer />\n     <UserContext.Provider value={{user, setUser}}>\n      <Header />\n       <Switch>\n         <Route exact path=\"/github-search-app\" component={Home} />\n         <Route exact path=\"/signup\" component={SignUp} />\n         <Route exact path=\"/signin\" component={SignIn} />\n\n         <Route exact path=\"*\" component={PageNotFound} />\n       </Switch>\n       <Footer />\n     </UserContext.Provider>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}